# Generated by Django 5.1.7 on 2025-04-13 16:11

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Camera",
            fields=[
                ("camera_id", models.AutoField(primary_key=True, serialize=False)),
                ("camera_name", models.CharField(max_length=100)),
                ("location", models.CharField(max_length=255)),
                ("road_name", models.CharField(max_length=255)),
                ("feed_url", models.URLField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=150, unique=True)),
                ("password", models.CharField(max_length=128)),
                ("email", models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="AccidentPredictionScore",
            fields=[
                (
                    "accident_prediction_score_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("area_geometry", models.TextField()),
                ("risk_score", models.FloatField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "camera",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accident_predictions",
                        to="dashboard.camera",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Incident",
            fields=[
                ("incident_id", models.AutoField(primary_key=True, serialize=False)),
                ("incident_type", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "severity",
                    models.IntegerField(
                        help_text="Scale from 0-10",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "camera",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incidents",
                        to="dashboard.camera",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KPISnapshot",
            fields=[
                (
                    "kpi_snapshot_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("total_incidents", models.IntegerField(default=0)),
                ("average_response_time", models.DurationField(blank=True, null=True)),
                ("total_infractions", models.IntegerField(default=0)),
                ("moderate_risk_count", models.IntegerField(default=0)),
                ("high_risk_count", models.IntegerField(default=0)),
                (
                    "camera",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kpi_snapshots",
                        to="dashboard.camera",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResponseTime",
            fields=[
                (
                    "response_time_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("response_time", models.DurationField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="response_times",
                        to="dashboard.incident",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "notification_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("message", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("threshold_triggered", "Threshold Triggered"),
                            ("message", "Message"),
                            ("alert", "Alert"),
                        ],
                        max_length=50,
                    ),
                ),
                ("read_status", models.BooleanField(default=False)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="dashboard.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Weather",
            fields=[
                ("weather_id", models.AutoField(primary_key=True, serialize=False)),
                ("temperature", models.FloatField()),
                ("conditions", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "camera",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weather_data",
                        to="dashboard.camera",
                    ),
                ),
            ],
        ),
    ]
